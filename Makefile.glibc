prefix=/usr/local
LIBDIR=${prefix}/lib
INCLUDEDIR=${prefix}/include
MAN3DIR=${prefix}/man/man3
LIBNAME=glibc_libowfat.a

all: byte.a fmt.a scan.a str.a uint.a open.a stralloc.a unix.a socket.a buffer.a mmap.a tai.a cdb.a case.a mult.a array.a ${LIBNAME} 

VPATH=str:byte:fmt:scan:uint:open:stralloc:unix:socket:buffer:mmap:textcode:tai:timeout:sig:dns:case:cdb:alloc:constmap:mult:array

# comment out the following line if you don't want to build with the
# diet libc (http://www.fefe.de/dietlibc/).
# DIET=diet -Os
CC=gcc
CFLAGS=-I. -pipe -Wall -O2 -fomit-frame-pointer
#CFLAGS=-pipe -Os -march=pentiumpro -mcpu=pentiumpro -fomit-frame-pointer -fschedule-insns2 -Wall

BYTE_glibc_objs=$(patsubst byte/%.c,glibc_objs/%.o,$(wildcard byte/*.c))
FMT_glibc_objs=$(patsubst fmt/%.c,glibc_objs/%.o,$(wildcard fmt/*.c))
SCAN_glibc_objs=$(patsubst scan/%.c,glibc_objs/%.o,$(wildcard scan/*.c))
STR_glibc_objs=$(patsubst str/%.c,glibc_objs/%.o,$(wildcard str/*.c))
UINT_glibc_objs=$(patsubst uint/%.c,glibc_objs/%.o,$(wildcard uint/*.c))
OPEN_glibc_objs=$(patsubst open/%.c,glibc_objs/%.o,$(wildcard open/*.c))
STRA_glibc_objs=$(patsubst stralloc/%.c,glibc_objs/%.o,$(wildcard stralloc/*.c))
UNIX_glibc_objs=$(patsubst unix/%.c,glibc_objs/%.o,$(wildcard unix/*.c))
SOCKET_glibc_objs=$(patsubst socket/%.c,glibc_objs/%.o,$(wildcard socket/*.c))
BUFFER_glibc_objs=$(patsubst buffer/%.c,glibc_objs/%.o,$(wildcard buffer/*.c))
MMAP_glibc_objs=$(patsubst mmap/%.c,glibc_objs/%.o,$(wildcard mmap/*.c))
TEXTCODE_glibc_objs=$(patsubst textcode/%.c,glibc_objs/%.o,$(wildcard textcode/*.c))
DNS_glibc_objs=$(patsubst dns/%.c,glibc_objs/%.o,$(wildcard dns/*.c))
CASE_glibc_objs=$(patsubst case/%.c,glibc_objs/%.o,$(wildcard case/*.c))
TAI_glibc_objs=$(patsubst tai/%.c,glibc_objs/%.o,$(wildcard tai/*.c))
TIMEOUT_glibc_objs=$(patsubst timeout/%.c,glibc_objs/%.o,$(wildcard timeout/*.c))
SIG_glibc_objs=$(patsubst sig/%.c,glibc_objs/%.o,$(wildcard sig/*.c))
CDB_glibc_objs=$(patsubst cdb/%.c,glibc_objs/%.o,$(wildcard cdb/*.c))
ALLOC_glibc_objs=$(patsubst alloc/%.c,glibc_objs/%.o,$(wildcard alloc/*.c))
CONSTMAP_glibc_objs=$(patsubst constmap/%.c,glibc_objs/%.o,$(wildcard constmap/*.c))
MULT_glibc_objs=$(patsubst mult/%.c,glibc_objs/%.o,$(wildcard mult/*.c))
ARRAY_glibc_objs=$(patsubst array/%.c,glibc_objs/%.o,$(wildcard array/*.c))

$(BYTE_glibc_objs): byte.h
$(FMT_glibc_objs): fmt.h
$(SCAN_glibc_objs): scan.h
$(STR_glibc_objs): str.h
$(UINT_glibc_objs): uint16.h uint32.h
$(STRA_glibc_objs): stralloc.h
$(SOCKET_glibc_objs): socket.h
$(BUFFER_glibc_objs): buffer.h
$(MMAP_glibc_objs): mmap.h
$(TEXTCODE_glibc_objs): textcode.h
$(DNS_glibc_objs): dns.h
$(CASE_glibc_objs): case.h
$(TAI_glibc_objs): tai.h taia.h
$(TIMEOUT_glibc_objs): timeout.h
$(SIG_glibc_objs): sig.h
$(CDB_glibc_objs): cdb.h
$(ALLOC_glibc_objs): alloc.h
$(CONSTMAP_glibc_objs): constmap.h
$(MULT_glibc_objs): safemult.h
$(ARRAY_glibc_objs): array.h

byte.a: $(BYTE_glibc_objs)
fmt.a: $(FMT_glibc_objs)
scan.a: $(SCAN_glibc_objs)
str.a: $(STR_glibc_objs)
uint.a: $(UINT_glibc_objs)
open.a: $(OPEN_glibc_objs)
stralloc.a: $(STRA_glibc_objs)
unix.a: $(UNIX_glibc_objs)
socket.a: $(SOCKET_glibc_objs)
buffer.a: $(BUFFER_glibc_objs)
mmap.a: $(MMAP_glibc_objs)
textcode.a: $(TEXTCODE_glibc_objs)
dns.a: $(DNS_glibc_objs)
case.a: $(CASE_glibc_objs)
tai.a: $(TAI_glibc_objs)
timeout.a: $(TIMEOUT_glibc_objs)
sig.a: $(SIG_glibc_objs)
cdb.a: $(CDB_glibc_objs)
alloc.a: $(ALLOC_glibc_objs)
mult.a: $(MMAP_glibc_objs)
array.a: $(ARRAY_glibc_objs)

$(LIBNAME): $(BYTE_glibc_objs) $(FMT_glibc_objs) $(SCAN_glibc_objs) $(STR_glibc_objs) \
$(UINT_glibc_objs) $(OPEN_glibc_objs) $(STRA_glibc_objs) $(UNIX_glibc_objs) $(SOCKET_glibc_objs) \
$(BUFFER_glibc_objs) $(MMAP_glibc_objs) $(TEXTCODE_glibc_objs) $(TAI_glibc_objs) \
$(TIMEOUT_glibc_objs) $(SIG_glibc_objs) $(DNS_glibc_objs) $(CASE_glibc_objs) $(CDB_glibc_objs) \
$(ALLOC_glibc_objs) $(CONSTMAP_glibc_objs) $(MULT_glibc_objs) $(ARRAY_glibc_objs)

glibc_objs/%.o: %.c
	$(DIET) $(CC) -c $< -o $@ $(CFLAGS)

%.a:
	ar cr $@ $^
	-ranlib $@

t: t.o $(LIBNAME)
	$(DIET) $(CC) -g -o $@ $^

.PHONY: clean tar install rename
clean:
	rm -f glibc_objs/*.o *.a *.da *.bbg *.bb core t haveip6.h haven2i.h haveinline.h

INCLUDES=buffer.h byte.h fmt.h ip4.h ip6.h mmap.h scan.h socket.h str.h stralloc.h uint16.h uint32.h uint64.h open.h textcode.h sig.h tai.h taia.h timeout.h wait.h env.h 

install: $(LIBNAME)
	install -d $(INCLUDEDIR) $(MAN3DIR) $(LIBDIR)
	install -m 644 $(INCLUDES) $(INCLUDEDIR)
	install -m 644 $(wildcard */*.3) $(MAN3DIR)
	install -m 644 $(LIBNAME) $(LIBDIR)

uninstall:
	rm -f $(patsubst %.h,$(INCLUDEDIR)/%.h,$(INCLUDES))
	rm -f $(patsubst %.3,$(MAN3DIR)/%.3,$(notdir $(wildcard */*.3)))
	rm -f $(LIBDIR)/$(LIBNAME)

VERSION=libowfat-$(shell head -1 CHANGES|sed 's/://')
CURNAME=$(notdir $(shell pwd))

tar: clean rename
	cd ..; tar cvvf $(VERSION).tar.bz2 $(VERSION) --use=bzip2 --exclude CVS

rename:
	if test $(CURNAME) != $(VERSION); then cd .. && mv $(CURNAME) $(VERSION); fi

haveip6.h:
	-rm -f $@
	if $(DIET) $(CC) -c tryip6.c >/dev/null 2>&1; then echo "#define LIBC_HAS_IP6"; fi > $@
	-rm -f tryip6.o

haven2i.h:
	-rm -f $@
	if $(DIET) $(CC) -o t tryn2i.c >/dev/null 2>&1; then echo "#define HAVE_N2I"; fi > $@
	-rm -f t

# havesl.h:
# 	-rm -f $@
# 	if ! $(DIET) $(CC) -o t trysl.c >/dev/null 2>&1; then echo "typedef int socklen_t;"; fi > $@
# 	-rm -f t

haveinline.h:
	-rm -f $@
	if ! $(DIET) $(CC) -c tryinline.c >/dev/null 2>&1; then echo "#define inline"; fi > $@
	-rm -f tryip6.o

socket_accept6.o socket_connect6.o socket_local6.o socket_mchopcount6.o \
socket_mcjoin6.o socket_mcleave6.o socket_mcloop6.o socket_recv6.o \
socket_remote6.o socket_send6.o socket_tcp6.o socket_udp6.o: haveip6.h

socket_getifidx.o socket_getifname.o: haven2i.h

# socket_accept4.o socket_accept6.o socket_connected.o socket_local4.o \
# socket_local6.o socket_recv4.o socket_recv6.o socket_remote4.o \
# socket_remote6.o: havesl.h

fmt_xlong.o scan_xlong.o fmt_ip6_flat.o $(TEXTCODE_glibc_objs): haveinline.h
